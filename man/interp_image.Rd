% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_contour.R
\name{interp_image}
\alias{interp_image}
\title{Interpolate an even grid of z(x,y) onto arbitrary (x,y) points}
\usage{
interp_image(image, x, y)
}
\arguments{
\item{x}{(vector) \code{x} positions at which to compute \code{z}}

\item{y}{(vector) \code{y} positions at which to compute \code{z}}

\item{img}{(list) containing three components: \code{x, y, z}}
}
\value{
The output is a vector of \code{z} values at the position of each
 input \code{(x, y)} coordinate.
}
\description{
\code{interp_image}
}
\details{
From an image \code{z(x,y)} at evenly spaced grid points \code{x = i*dx} 
\code{y = j*dy}, return the values of \code{z} at arbirary points
\code{(x, y)} between grid points. The values are calculated using bilinear
interpolation. I.e. for an output point \code{(x, y)} the corners of the
surrounding grid square are identified, and the result is a weighted
combination of these four \code{z} values: \code{z(x1, y1)}, \code{z(x2, y1)},
\code{z(x1, y2)}, \code{z(x2, y2)} where the weights depend on the distances
from the \code{x} and \code{y} boundaries of the grid square.
}
\section{Notes}{

The input \code{img} should be a list with three components:
 \code{img$z} is a vector of \code{nx} evenly spaced \code{x} positions,
 \code{img$y} is a vector of \code{ny} evenly spaced \code{y} position,
 \code{img$z} is an \code{nx*ny} array of \code{z} values at the 
 \code{(x,y)} coordinates.
}

\seealso{
\code{\link{chain_convergence}}, \code{\link{contour_matrix}}
}
